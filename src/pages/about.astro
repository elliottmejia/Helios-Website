---
import AboutLayout from "src/layouts/AboutLayout.astro";
import { AboutMenu, AboutContent } from "src/components/about";
import { activeAboutItem } from "src/store.js";

import { getCollection } from "astro:content";

const aboutPosts = await getCollection("about");

// console.log(content);
---

<AboutLayout title="Helios | About">
  <div
    class="grid grid-cols-1 md:grid-cols-4 gap-8 ml-8 mt-0 max-w-screen min-h-[300px] pt-8"
  >
    <div class="md:col-span-1">
      <AboutMenu data={aboutPosts} active={0} />
    </div>
    <div class="md:col-span-3">
      {
        aboutPosts.map((d, idx) => {
          // console.log("idx", idx);
          const activeContent = activeAboutItem.get() || 0;
          if (idx === activeContent) {
            return <AboutContent idx={idx} active={true} />;
          }
          return <AboutContent idx={idx} active={false} />;
        })
      }
    </div>
  </div>
</AboutLayout>

<script lang="ts" type="module" define:vars={{ aboutPosts }}>
  import { activeAboutItem } from "/src/store.js";
  console.log("Active About Item Test", activeAboutItem.get());
  const data = aboutPosts;
  // make this work for all with idx
  const posts = document.querySelectorAll(".post");

  activeAboutItem.subscribe((value) => {
    posts.forEach((item, idx) => {
      // console.log(item, idx);
      item.classList.remove("block");
      if (idx === value) {
        item.classList.remove("hidden");
        item.classList.add("block");
        console.log("post", idx, "set as active");
        console.log("store reflects as ", activeAboutItem.get());
        return;
      }
      item.classList.add("hidden");
    });
  });

  // Swipe detection logic
  let touchstartX = 0;
  let touchendX = 0;

  function handleGesture() {
    const activeIdx = activeAboutItem.get();
    if (touchendX < touchstartX) {
      // Swipe left, go to next post
      if (activeIdx < data.length - 1) {
        activeAboutItem.set(activeIdx + 1);
      }
    } else if (touchendX > touchstartX) {
      // Swipe right, go to previous post
      if (activeIdx > 0) {
        activeAboutItem.set(activeIdx - 1);
      }
    }
  }

  document.addEventListener("touchstart", (e) => {
    touchstartX = e.changedTouches[0].screenX;
  });

  document.addEventListener("touchend", (e) => {
    touchendX = e.changedTouches[0].screenX;
    handleGesture();
  });
</script>
