---
import Button from "../components/ui/button.astro";

interface Props {
  title?: string;
  className?: string;
  solo?: boolean | false;
  body?: string;
}

const {title, className, solo, body}: Props = Astro.props;
---

<section class={`${className && className} py-8 lg:py-16 px-4 mx-auto max-w-screen-md`}>
  {title && (!solo)?
    ( <h2 class="text-4xl text-center lg:text-5xl font-bold lg:tracking-tight">
      {title}
    </h2> )
    :
    ( <h1 class="text-4xl text-center lg:text-5xl font-bold lg:tracking-tight">
      {title}
      </h1>
    )
  }
  {body && (
    <p class="mt-5 text-center text-xl lg:text-2xl text-gray-500">
      {body}
    </p>
  )}
  <form
    action="https://api.web3forms.com/submit"
    method="POST"
    id="contact-form"
    class="needs-validation mt-16 mx-auto"
    novalidate
  >
    <input
      type="hidden"
      name="access_key"
      value="02c584b0-9111-41a3-b3aa-fbc849699c64E"
    />
    <input
      type="checkbox"
      class="hidden"
      style="display:none"
      name="botcheck"
    />
    <div class="mb-5 flex nameholder w-100 gap-4 child:flex-grow child:w-100">
      <span>
        <input
          type="text"
          placeholder="First Name"
          required
          class="px-4 w-full py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
          name="first-name"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
          Please provide your first name.
        </div>
      </span>
      <span>
        <input
          type="text"
          placeholder="Last Name"
          class="px-4 w-full py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
          name="last-name"
        />
      </span>
    </div>

    <div class="mb-5">
      <input
        type="tel"
        placeholder="Phone number"
        required
        class="px-4 w-full py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        name="phone"
      />
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide your phone number.
      </div>
    </div>

    <div class="mb-5">
      <label for="email_address" class="sr-only">Email Address</label>
      <input
        id="email_address"
        type="email"
        placeholder="Email Address"
        name="email"
        required
        class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      />
      <div class="empty-feedback text-red-400 text-sm mt-1">
        Please provide your email address.
      </div>
      <div class="invalid-feedback text-red-400 text-sm mt-1">
        Please provide a valid email address.
      </div>
    </div>

    <div class="mb-5">
      <input
        type="text"
        placeholder="Monthly Electric Bill"
        class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        name="monthly-bill"
      />
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide a ballpark of your monthly electric bill.
      </div>
    </div>

    <div class="mb-3">
      <textarea
        name="message"
        required
        placeholder="Message"
        class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none h-36 focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      ></textarea>
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please enter your message.
      </div>
    </div>
    <Button type="submit" size="lg" block>
      Send Message
    </Button>
    <div id="result" class="mt-3 text-center"></div>
  </form>
</section>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById("contact-form");
  const result = document.getElementById("result");
  const monthlyInput = document.querySelector("[name=monthly-bill]");

  monthlyInput.addEventListener("input", function (e) {
    if (e.target.value && e.target.value.charAt(0) !== "$") {
      e.target.value = "$" + e.target.value;
    }
  });

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }

    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    monthlyInput.value = monthlyInput.value.replace(/^\$/, "");

    result.innerHTML = "Sending...";

    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          result.classList.add("text-green-500");
          result.innerHTML = json.message;
        } else {
          console.log(response);
          result.classList.add("text-red-500");
          result.innerHTML = json.message;
        }
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      });
  });
</script>
