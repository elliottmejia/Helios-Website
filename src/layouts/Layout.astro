---
import { SEO } from "astro-seo";
import Footer from "../components/footer2.astro";
import Navbar from "../components/navbar/navbar2.astro";
import "@fontsource-variable/inter/index.css";
import { sharedValidateOptions } from "node_modules/@astrojs/vercel/dist/image/shared";
// import DarkModeToggle from "../components/react/converted/DarkModeToggle/DarkModeToggle.astro";
// import { ViewTransitions } from "astro:transitions";

import siteImage from "../../public/opengraph.jpg";

export interface Props {
  title: string;
}

// const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
// console.log(canonicalURL);

// const resolvedImageWithDomain = new URL(
//   "/opengraph.jpg",
//   Astro.site
// ).toString();

const { title } = Astro.props;

const makeTitle = title
  ? title
  : "Honest Power";
---

<!DOCTYPE html>
<html lang="en" class="light">

  <head>
    <script>
      if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark')
      } else {
        document.documentElement.classList.remove('dark')
      }
    </script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/ico" href="/favicon.ico" />
    <link rel="sitemap" href="/sitemap.xml" />
    <meta name="generator" content={Astro.generator} />

    <!-- <link rel="preload" as="image" href={src} alt="Hero" /> -->
    <SEO
      title={makeTitle}
      description="Change your home's life with Honest Solar."
      canonical={Astro.site + Astro.url.pathname}

      openGraph={{
        basic: {
          url: Astro.site + Astro.url.pathname,
          type: "website",
          title: `Honest Power- Power You Can Trust`,
          image: siteImage.src,
        },
        image: {
          alt: "Astroship Homepage Screenshot",
        },
      }}
    />
    <!-- <ViewTransitions/> -->
    <!--<script is:inline>// Check user's preferred color scheme-->
    <!--let prefersDarkTheme = window.matchMedia('(prefers-color-scheme: dark)').matches;-->
    <!--let userPreferredTheme = prefersDarkTheme ? 'dark' : 'light';-->

    <!--// Retrieve theme from local storage or use the user's preferred theme-->
    <!--let storedTheme = localStorage.getItem("prefersTheme");-->
    <!--let colorTheme = storedTheme || userPreferredTheme;-->

    <!--// Apply the color theme to the HTML document-->
    <!--document.documentElement.setAttribute('data-theme', colorTheme);-->

    <!--// Log for demonstration purposes (you can remove this in your actual code)-->
    <!--console.log(`User prefers ${userPreferredTheme} theme. Applied ${colorTheme} theme.`);;-->
    <!--</script>-->
  </head>
  <body>
    <Navbar/>
    <slot />
    <Footer />
    <style is:global>
      /* Improve Page speed */
      /* https://css-tricks.com/almanac/properties/c/content-visibility/ */
      img {
        content-visibility: auto;
      }
    </style>
    <!-- <DarkModeToggle client:load/> -->
  </body>
</html>
